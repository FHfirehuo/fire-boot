#此处的优先级比application.properties的级别高所以优先使用此处的配置
#server.port=80

spring.thymeleaf.cache=false

spring.datasource.url=jdbc:mysql://localhost:3306/boot?characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=OpenFire%@61
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.sql-script-encoding=UTF-8

#如果没有可用的连接，则在抛出异常之前等待的毫秒数
spring.datasource.tomcat.max-wait=10000
#可以同时从此池分配的活动连接的最大数量
spring.datasource.tomcat.max-active=50
#在从池借用连接之前验证连接
spring.datasource.tomcat.test-on-borrow=true

#validate:启动时验证实体和表结构是否一致,在数据结构稳定时采用. none:不采取任何措施
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

#让控制器输出的json字符串格式更美观
spring.jackson.serialization.indent_output=true

#将hibernate.globally_quoted_identifiers传递给Hibernate实体管理器。
spring.jpa.properties.hibernate.globally_quoted_identifiers=true


#如果您在类路径上具有Jest，则可以默认注入自动配置的JestClient，其目标为localhost:9200。 您可以进一步调整客户端的配置方式：
#To take full control over the registration, define a JestClient bean.
#spring.elasticsearch.jest.uris=http://search.example.com:9200
#spring.elasticsearch.jest.read-timeout=10000
#spring.elasticsearch.jest.username=user
#spring.elasticsearch.jest.password=secret

#您可以像任何其他Spring Bean一样注入自动配置的ElasticsearchTemplate或Elasticsearch Client实例。
# 默认情况下，实例将嵌入本地内存服务器（Elasticsearch术语中的Node），
#并使用当前工作目录作为服务器的主目录。 在这个设置中，首先要做的是告诉Elasticsearch在哪里存储它的文件：
#spring.data.elasticsearch.properties.path.home=/foo/bar

#或者，您可以通过将spring.data.elasticsearch.cluster-nodes设置为逗号分隔的“host：port”列表来切换到远程服务器（即TransportClient）。
#spring.data.elasticsearch.cluster-nodes=localhost:9300
